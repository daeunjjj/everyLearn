<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="adminMapper">
	
	<resultMap type="com.coding5.el.member.vo.MemberVo" id="memberMap">
		<result property="memberNo" column="NO"/>
		<result property="memberId" column="ID"/>
		<result property="memberPwd" column="PWD"/>
		<result property="memberName" column="NAME"/>
		<result property="memberNick" column="NICK"/>
	</resultMap>
	
	
	<select id="selectOneAdminByVo" resultType="AdminVo">
		SELECT 
		    A.NO
		    ,PER.NAME AS PERMISSION
		    ,PO.NAME AS POSITION
		    ,A.ID
		    ,A.PWD
		    ,A.NICK
		    ,A.NAME
		    ,A.PHONE
		    ,A.ENROLL_DATE
		    ,A.MODIFY_DATE
		    ,A.QUIT_YN
		    ,A.PROFILE_NAME
		FROM ADMIN A
		JOIN ADMIN_PERMISSION PER 
		    ON A.PERMISSION = PER.NO
		JOIN ADMIN_POSITION PO 
		    ON A.POSITION = PO.NO
		<where>
			<if test="id != null and id != ''">
			 	A.ID = #{id}			
			</if>    
			<if test="nick != null and nick != ''">
				AND A.NICK = #{nick}
			</if>
		</where>
	</select>
	
	<insert id="insertAdminOne">
		INSERT INTO ADMIN
		(
		    NO
		    , PERMISSION
		    , POSITION
		    , ID
		    , PWD
		    , NICK
		    , NAME
		    , PHONE
		)
		VALUES
		(
		    SEQ_ADMIN_NO.NEXTVAL
		    , #{permission}
		    , #{position}
		    , #{id}
		    , #{pwd}
		    , #{nick}
		    , #{name}
		    , #{phone}
		)
	</insert>
	
	<update id="updateAdmin">
		UPDATE ADMIN
		    SET
	    <if test="nick != null and nick != ''">
		    NICK = #{nick}	    
	    </if>
	    <if test="phone != null and phone != ''">
		    ,PHONE = #{phone}	    
	    </if>
	  	<if test="pwd != null and pwd != ''">
		    ,PWD = #{pwd}
	    </if>
		<if test="position != null and position != ''">
			,POSITION = #{position}
		</if>
		<if test="permission != null and permission != ''">
			,PERMISSION = #{permission}
		</if>
		<if test="profileName != null and profileName != ''">
			,PROFILE_NAME = #{profileName}
		</if>
		WHERE NO = #{no}
	</update>
	
	<select id="selectAdminConut" resultType="int">
		SELECT COUNT(*)
		FROM ADMIN
		<if test="keyword != null and keyword != ''">
			WHERE ${category} LIKE '%${keyword}%'
		</if>
	</select>
	
	<select id="selectAdminList" resultType="AdminVo">
		SELECT 
		    A.NO
		    ,PER.NAME AS PERMISSION
		    ,PO.NAME AS POSITION
		    ,A.ID
		    ,A.PWD
		    ,A.NICK
		    ,A.NAME
		    ,A.PHONE
		    ,A.ENROLL_DATE
		    ,A.MODIFY_DATE
		    ,DECODE(QUIT_YN, 'N','유지', 'Y','탈퇴') AS QUIT_YN
		FROM ADMIN A
		JOIN ADMIN_PERMISSION PER 
		    ON A.PERMISSION = PER.NO
		JOIN ADMIN_POSITION PO 
		    ON A.POSITION = PO.NO
    	<if test="keyword != null and keyword != ''">
	    	WHERE A.${category} LIKE '%${keyword}%'
    	</if>
	    ORDER BY A.ENROLL_DATE DESC
	</select>
	
	<select id="selectOneAdminByNo" resultType="AdminVo">
		SELECT 
		    NO
		    ,PERMISSION
		    ,POSITION
		    ,ID
		    ,NICK
		    ,NAME
		    ,PHONE
		    ,ENROLL_DATE
		    ,MODIFY_DATE
		    ,QUIT_YN
		    ,PROFILE_NAME
		FROM ADMIN
   		WHERE NO = #{no}
	</select>
	
	<select id="selectOneAdminById" resultType="AdminVo">
		SELECT 
		    A.NO
		    ,PER.NAME AS PERMISSION
		    ,PO.NAME AS POSITION
		    ,A.ID
		    ,A.PWD
		    ,A.NICK
		    ,A.NAME
		    ,A.PHONE
		    ,A.ENROLL_DATE
		    ,A.MODIFY_DATE
		    ,A.QUIT_YN
		    ,A.PROFILE_NAME
		FROM ADMIN A
		JOIN ADMIN_PERMISSION PER 
		    ON A.PERMISSION = PER.NO
		JOIN ADMIN_POSITION PO 
		    ON A.POSITION = PO.NO
   		WHERE A.ID = #{id}
   		AND A.QUIT_YN = 'N'
	</select>
	
	<select id="selectStudentCount" resultType="int">
		SELECT COUNT(*)
		FROM MEMBER
		<if test="keyword != null and keyword != ''">
			WHERE ${category} LIKE '%${keyword}%'
		</if>
	</select>
	
	<select id="selectStudentList" resultType="com.coding5.el.member.vo.MemberVo" resultMap="memberMap">
		SELECT 
		    NO
		    ,ID
		    ,PWD
		    ,NAME
		    ,BIRTH
		    ,PHONE
		    ,NICK
		    ,EMAIL
		    ,TO_CHAR(ENROLL_DATE, 'YYYY-MM-DD') AS ENROLL_DATE
		    ,MODIFY_DATE
		    ,PROFILE_IMG_NAME
		    ,POINT
		    ,DECODE(QUIT_YN, 'N','유지', 'Y','탈퇴') AS QUIT_YN
		FROM MEMBER
		<if test="keyword != null and keyword != ''">
			WHERE ${category} LIKE '%${keyword}%'
		</if>
	</select>
	
	<select id="selectStudentOneByNo" resultType="com.coding5.el.member.vo.MemberVo" resultMap="memberMap">
		SELECT
		    M.NO
		    ,M.ID
		    ,M.PWD
		    ,M.NAME
		    ,TO_CHAR(BIRTH, 'YYYY-MM-DD') AS BIRTH
		    ,M.PHONE
		    ,M.NICK
		    ,M.EMAIL
		    ,M.ENROLL_DATE
		    ,M.MODIFY_DATE
		    ,M.PROFILE_IMG
		    ,M.POINT
		    ,DECODE(QUIT_YN, 'N','유지', 'Y','탈퇴') AS QUIT_YN
		    ,M.REPORT_CNT
		    ,TO_CHAR(START_DATE, 'YYYY-MM-DD') AS START_DATE
		    ,TO_CHAR(FINISH_DATE, 'YYYY-MM-DD') AS FINISH_DATE
		FROM MEMBER M
		FULL JOIN REPORT R ON M.NO = R.BLACKLIST 
		WHERE M.NO = #{memberNo}
	</select>
	<select id="selectPointListByNo" resultType="com.coding5.el.member.vo.PointVo">
		SELECT
		    P.MEMBER_NO
		    ,CP.NAME AS HISTORY
		    ,P.CHANGE
		    ,P.ENROLL_DATE
		FROM POINT P
		JOIN CATE_POINT CP ON P.HISTORY = CP.NO
		WHERE P.MEMBER_NO = #{memberNo}
		ORDER BY P.ENROLL_DATE DESC
	</select>
	<insert id="insertPoint">
		INSERT INTO POINT 
		(
			MEMBER_NO
			, HISTORY
			, CHANGE
		) 
		VALUES
		(
			#{memberNo}
			, #{history}
			, #{change}
		)
	</insert>
	
	<update id="updateStudent">
		UPDATE MEMBER 
			SET 
		POINT = POINT ${change} WHERE NO = #{memberNo}
	</update>
	
	<select id="selectTeacherCount" resultType="int">
			SELECT COUNT(*)
			FROM TEACHER T
			JOIN MEMBER M ON T.MEMBER_NO = M.NO
		<where>
			<if test="keyword != null and keyword != ''">
				M.${category} LIKE '%${keyword}%'
			</if>
			<if test="category == 'status'">
				AND T.STATUS_YN = 'N'
			</if>
		</where>
		<if test="cate != null and keyword != ''">
			AND T.CATEGORY IN
			<foreach collection="cate" item="arr" open="(" close=")" separator=",">
			#{arr}
			</foreach>
		</if>
	</select>
	
	<select id="selectTeacherList" resultType="com.coding5.el.teacher.vo.TeacherVo">
		SELECT
		    T.NO
		    ,T.MEMBER_NO
		    ,T.CATEGORY AS CLASS_CATE
		    ,T.CAREER
		    ,T.SHORT_INTRO
		    ,T.INTRODUCE
		    ,T.RECORD
		    ,T.ENROLL_DATE
		    ,T.MODIFY_DATE
		    ,T.STATUS_YN
		    ,T.DELETE_YN
		    ,M.ID
		    ,M.EMAIL
		    ,M.NAME
   			,M.PHONE
		FROM TEACHER T
		JOIN MEMBER M ON T.MEMBER_NO = M.NO
		<where>
			<if test="keyword != null and keyword != ''">
				M.${category} LIKE '%${keyword}%'
			</if>
			<if test="category == 'status'">
				T.STATUS_YN = 'N'
			</if>
			<if test="cate != null and keyword != ''">
				AND T.CATEGORY IN
				<foreach collection="cate" item="arr" open="(" close=")" separator=",">
				#{arr}
				</foreach>
			</if>
		</where>	
		ORDER BY T.NO DESC
	</select>
	
	<select id="selectTeacherStatusByN" resultType="int">
		SELECT COUNT(*)
		FROM TEACHER
		WHERE STATUS_YN = 'N'
		AND DELETE_YN = 'N'
	</select>
	
	<select id="selectTeacherDetailByNo" resultType="com.coding5.el.teacher.vo.TeacherVo">
		SELECT
		    T.NO
		    ,T.MEMBER_NO
		    ,T.CATEGORY AS CLASS_CATE
		    ,T.CAREER
		    ,T.SHORT_INTRO
		    ,T.INTRODUCE
		    ,T.RECORD AS CHANGE_NAME2
		    ,T.ENROLL_DATE
		    ,T.MODIFY_DATE
		    ,T.STATUS_YN
		    ,T.DELETE_YN
		    ,M.ID
		    ,M.EMAIL
		    ,M.NAME
		    ,P.CHANGE_NAME
		    ,M.PHONE
		FROM TEACHER T
		JOIN MEMBER M 
		ON T.MEMBER_NO = M.NO
		JOIN PROFILE_TEACHER_ATTATCH P ON T.NO = P.TEACHER_NO
		WHERE T.NO = #{no}
	</select>
	
	<select id="selectLectureList" resultType="com.coding5.el.lecture.vo.LectureVo">
		SELECT
			NO
			,TEACHER_NO
			,CATEGORY
			,CLASS_NAME
			,CLASS_CONTENT
			,RECOMM
			,STUDENT_CNT
			,PRICE
			,ENROLL_DATE
			,TO_CHAR(MODIFY_DATE, 'YYYY-MM-DD') AS MODIFY_DATE
			,DELETE_YN
			,CLASS_CNT
		FROM CLASS
		WHERE TEACHER_NO = #{no}
	</select>
	
	<update id="teacherDeleteByNo">
		UPDATE TEACHER
		SET 
		    STATUS_YN = 'N'
		  , DELETE_YN = 'Y'
		WHERE NO IN
		<foreach collection="array" item="no" open="(" close=")" separator=",">
			#{no}
		</foreach>
	</update>
	<update id="teacherApprovalByNo">
		UPDATE TEACHER
		SET 
		    STATUS_YN = 'Y'
		WHERE NO = #{no}
	</update>
	
	<update id="classDeleteByNo">
		UPDATE CLASS
		SET 
		    DELETE_YN = 'Y'
		WHERE NO = #{cno}
	</update>
	
	<select id="selectAdminIdListByPhone" resultType="AdminVo">
		SELECT 
		    ID 
		  , TO_CHAR(ENROLL_DATE, 'YYYY-MM-DD') AS ENROLL_DATE
		FROM ADMIN 
		WHERE QUIT_YN = 'N'
		AND PHONE = #{phone}
	</select>
	
	<update id="updateAdminQuityByNo">
		UPDATE ADMIN
		    SET QUIT_YN = 'Y'
		WHERE NO IN 
		<foreach collection="array" item="no" open="(" close=")" separator=",">
			#{no}
		</foreach>
	</update>
	
	<select id="selectCorporateCount" resultType="int">
		SELECT COUNT(*)
		FROM CORPORATE_MEMBER
		<if test="keyword != null and keyword != ''">
			WHERE ${category} LIKE '%${keyword}%'
		</if>
		<if test="cate != null and keyword != ''">
			AND SECTOR IN
			<foreach collection="cate" item="arr" open="(" close=")" separator=",">
			#{arr}
			</foreach>
		</if>
	</select>
	
	<select id="selectCorporateList" resultType="CorpVo">
		SELECT 
		    NO
		    ,ID
		    ,PWD
		    ,COMPANY_NAME
		    ,COMPANY_ADDRESS
		    ,DETAIL_ADDRESS
		    ,NAME
		    ,PHONE
		    ,INTRODUCE
		    ,ENROLL_DATE
		    ,MODIFY_DATE
		    ,COMPANY_NUM
		    ,QUIT_YN
		    ,STATUS_YN
		    ,SECTOR
		    ,EMP_NUM
		    ,SALES
		    ,HOMEPAGE
		    ,DELETE_YN
		FROM CORPORATE_MEMBER
		<where>
			<if test="keyword != null and keyword != ''">
				${category} LIKE '%${keyword}%'
			</if>
			<if test="cate != null and keyword != ''">
				AND SECTOR IN
				<foreach collection="cate" item="arr" open="(" close=")" separator=",">
				#{arr}
				</foreach>
			</if>
		</where>	
		ORDER BY NO DESC
	</select>
	<select id="selectCorporateStatusByN" resultType="int">
		SELECT COUNT(*)
		FROM CORPORATE_MEMBER
		WHERE STATUS_YN = 'N'
		AND DELETE_YN = 'N'
	</select>
	
	<select id="selectCorpDetailByNo" resultType="CorpVo">
		SELECT 
		    NO
		    ,ID
		    ,PWD
		    ,COMPANY_NAME
		    ,COMPANY_ADDRESS
		    ,DETAIL_ADDRESS
		    ,NAME
		    ,PHONE
		    ,INTRODUCE
		    ,ENROLL_DATE
		    ,MODIFY_DATE
		    ,COMPANY_NUM
		    ,QUIT_YN
		    ,STATUS_YN
		    ,SECTOR
		    ,EMP_NUM
		    ,SALES
		    ,HOMEPAGE
		    ,DELETE_YN
		FROM CORPORATE_MEMBER
		WHERE NO = #{no}
	</select>
	
	<select id="selectEmploymentList" resultType="EmploymentVo">
		SELECT
		    E.NO
		    ,E.CORP_NO
		    ,J.TYPE AS CATEGORY
		    ,E.TITLE
		    ,E.RESPONSIBILITY
		    ,E.QUALIFICATION
		    ,E.PREFERENTIAL
		    ,E.SALARY
		    ,E.BENEFITS
		    ,E.INTRODUCE
		    ,E.SECTOR
		    ,E.ADDRESS
		    ,E.CAREER
		    ,E.DEADLINE
		    ,E.ENROLL_DATE
		    ,TO_CHAR(MODIFY_DATE, 'YYYY-MM-DD') AS MODIFY_DATE
		    ,E.DELETE_YN
		FROM EMPLOYMENT E
		JOIN JOB_CATE J ON E.CATEGORY = J.NO
		WHERE CORP_NO = #{no}
	</select>
	
	<update id="studentQuit">
		UPDATE MEMBER
		SET QUIT_YN = 'Y'
		WHERE NO IN 
		<foreach collection="array" item="no" open="(" close=")" separator=",">
			#{no}
		</foreach>
	</update>
	<update id="corporateQuit">
		UPDATE CORPORATE_MEMBER
		SET QUIT_YN = 'Y'
		WHERE NO IN 
		<foreach collection="array" item="no" open="(" close=")" separator=",">
			#{no}
		</foreach>
	</update>
	<update id="empBoardDelete">
		UPDATE EMPLOYMENT
		SET DELETE_YN = 'Y'
		WHERE NO = #{eno}
	</update>
	
	<update id="corporateDelete">
		UPDATE CORPORATE_MEMBER
		SET DELETE_YN = 'Y'
		WHERE NO = #{no}
	</update>
	
	<update id="corporateApproval">
		UPDATE CORPORATE_MEMBER
		SET STATUS_YN = 'Y'
		WHERE NO = #{no}
	</update>
	
	<select id="selectReportCount" resultType="int">
		SELECT COUNT(*)
		FROM REPORT R
		JOIN MEMBER B ON R.BLACKLIST = B.NO
		JOIN MEMBER A ON R.ACCUSOR = A.NO
		<if test="keyword != null and keyword != ''">
			WHERE ${category} LIKE '%${keyword}%'
		</if>
	</select>
	
	<select id="selectReportList" resultType="ReportVo">
		SELECT 
		    R.NO
		    ,B.ID AS BLACKLIST_ID
		    ,A.ID AS ACCUSOR_ID
		   	,BLACKLIST
		    ,ACCUSOR
		    ,T.TYPE
		    ,R.CATE_NO
		    ,R.BOARD
		    ,TO_CHAR(REPORT_DATE, 'YYYY-MM-DD HH:MI') AS REPORT_DATE
		    ,R.HANDLE_YN
		    ,TO_CHAR(PROCESS_DATE, 'YYYY-MM-DD HH:MI') AS PROCESS_DATE
		    ,TO_CHAR(FINISH_DATE, 'YYYY-MM-DD') AS FINISH_DATE
		    ,M.METHOD
		FROM REPORT R
		JOIN MEMBER B ON R.BLACKLIST = B.NO
		JOIN MEMBER A ON R.ACCUSOR = A.NO
		FULL JOIN PROCESS_METHOD M ON R.METHOD = M.NO
		JOIN REPORT_TYPE T ON R.TYPE = T.NO
    	<if test="keyword != null and keyword != ''">
	    	WHERE ${category} LIKE '%${keyword}%'
    	</if>
	    ORDER BY R.NO DESC
	</select>
	
	    	
    <select id="selectHandleN" resultType="int">
		SELECT COUNT(*)
		FROM REPORT
		WHERE HANDLE_YN = 'N'
	</select>
	
	<select id="selectReportOneByNo" resultType="ReportVo">
		SELECT 
		    R.NO
		    ,B.ID AS BLACKLIST_ID
		    ,A.ID AS ACCUSOR_ID
		    ,BLACKLIST
		    ,ACCUSOR
		    ,T.TYPE
		    ,R.CATE_NO
		    ,R.BOARD
		    ,TO_CHAR(REPORT_DATE, 'YYYY-MM-DD HH:MI') AS REPORT_DATE
		    ,R.HANDLE_YN
		    ,TO_CHAR(PROCESS_DATE, 'YYYY-MM-DD HH:MI') AS PROCESS_DATE
		    ,TO_CHAR(FINISH_DATE, 'YYYY-MM-DD') AS FINISH_DATE
		FROM REPORT R
		JOIN MEMBER B ON R.BLACKLIST = B.NO
		JOIN MEMBER A ON R.ACCUSOR = A.NO
		JOIN REPORT_TYPE T ON R.TYPE = T.NO
		WHERE R.NO = #{no}
	</select>
	
	<update id="reportUpdate">
		UPDATE REPORT 
		    SET METHOD = #{method}
		    ,HANDLE_YN = 'Y' 
		    ,PROCESS_DATE = TO_CHAR(SYSDATE,'YY-MM-DD HH24:MI')
		<if test="finishDate != null and finishDate != ''">
	    	,START_DATE = #{startDate}
    	</if> 
		<if test="finishDate != null and finishDate != ''">
	    	,FINISH_DATE = #{finishDate}
    	</if>    
		WHERE NO = #{no}
	</update>
	
	<update id="memberUpdate">
		UPDATE MEMBER 
			SET REPORT_CNT = +1
		WHERE NO = #{blacklist}
	</update>
	
	<insert id="insertAlert">
		INSERT INTO ALERT
		(
		    NO
		    ,MEMBER_NO
		    ,CATEGORY
		    ,TITLE
		)
		VALUES
		(
		    SEQ_ALERT_NO.NEXTVAL
		    ,#{memberNo}
		    ,#{category}
		    ,#{title}
		)
	</insert>
	
	<select id="selectAgeChart" resultType="com.coding5.el.chart.vo.ChartVo">
		SELECT 
		    LABEL
		    , COUNT(*) AS DATA
		FROM (
		        SELECT 
		            FLOOR((TO_CHAR(SYSDATE, 'YYYY')- TO_CHAR(BIRTH, 'YYYY')) / 10) * 10 AS LABEL
		        FROM
		            MEMBER
		    ) O
		GROUP BY LABEL
		ORDER BY LABEL
	</select>
	
	<select id="selectClassChart" resultType="com.coding5.el.chart.vo.ChartVo">
		SELECT CLASS_NAME AS LABEL
		     , STUDENT_CNT AS DATA
		  FROM (
		        SELECT CLASS_NAME, STUDENT_CNT
		        FROM CLASS
		        <if test="cateNo != null and cateNo != ''">
		        	WHERE CATEGORY = #{cateNo}
		        </if>
		        ORDER BY STUDENT_CNT DESC
		       )
		<![CDATA[ WHERE ROWNUM <= 6 ]]>
	</select>
	<update id="updateTempPwd">
		UPDATE ADMIN
		    SET PWD = #{pwd}
		WHERE ID = #{id}
	</update>
	<insert id="insertEmailAndSelectPk" useGeneratedKeys="true" keyProperty="no" keyColumn="NO">
		INSERT INTO EMAIL
		(
		    NO
		    ,ADMIN_NO
		    ,TO_ADDRESS
		    ,FROM_ADDRESS
		    ,TITLE
		    ,CONTENT
		    ,FILE_YN
		)
		VALUES
		(
		    SEQ_EMAIL_NO.NEXTVAL
		    , #{adminNo}
		    , #{toAddress}
		    , #{fromAddress}
		    , #{title}
		    , #{content}
		    , #{fileYn}
		)

	</insert>
	
	<insert id="insertEmailAttach">
		INSERT ALL
		<foreach collection="list" item="vo" >
		INTO EMAIL_ATTATCH
		(
		    NO
		    ,EMAIL_NO
		    ,FILE_NAME
		)
		VALUES ( GET_EMAIL_ATTATCH_SEQ , #{vo.emailNo}, #{vo.fileName} )
		</foreach>
		select 1 from dual
	</insert>
	
	<select id="selectMailCount" resultType="int">
		SELECT COUNT(*)
		FROM EMAIL E
        JOIN ADMIN A ON A.NO = E.ADMIN_NO
		<where>
			E.DELETE_YN = 'N'
			<if test="keyword != null and keyword != '' and category == 'title'">
				AND E.${category} LIKE '%${keyword}%'
			</if>
			<if test="keyword != null and keyword != '' and category == 'name'">
				AND A.${category} LIKE '%${keyword}%'
			</if>
			<if test="adminNo != null and adminNo != ''">
				AND E.ADMIN_NO = #{adminNo}
			</if>
		</where>
	</select>
	<select id="selectMailList" resultType="com.coding5.el.email.vo.MailVo">
		SELECT 
		    E.NO
		    ,A.NAME AS ADMIN_NO
		    ,E.TO_ADDRESS
		    ,E.FROM_ADDRESS
		    ,E.TITLE
		    ,E.CONTENT
		    ,E.FILE_YN
		    ,E.ENROLL_DATE
		    ,E.DELETE_YN
		FROM EMAIL E
		JOIN ADMIN A ON E.ADMIN_NO = A.NO
		<where>
			E.DELETE_YN = 'N'
			<if test="keyword != null and keyword != '' and category == 'title'">
				AND E.${category} LIKE '%${keyword}%'
			</if>
			<if test="keyword != null and keyword != '' and category == 'name'">
				AND A.${category} LIKE '%${keyword}%'
			</if>
			<if test="adminNo != null and adminNo != ''">
				AND E.ADMIN_NO = #{adminNo}
			</if>
		</where>

		ORDER BY E.NO DESC
	</select>
	<update id="deleteSendMail">
		UPDATE EMAIL
		SET DELETE_YN = 'Y'
		WHERE NO IN 
		<foreach collection="array" item="no" open="(" close=")" separator=",">
			#{no}
		</foreach>
	</update>
	
	<select id="selectOneMail" resultType="com.coding5.el.email.vo.MailVo"> 
		SELECT
		    E.NO
		    ,A.NAME AS ADMIN_NO
		    ,E.TO_ADDRESS
		    ,E.FROM_ADDRESS
		    ,E.TITLE
		    ,E.CONTENT
		    ,E.FILE_YN
		    ,E.ENROLL_DATE
		    ,E.DELETE_YN
		FROM EMAIL E
		JOIN ADMIN A ON E.ADMIN_NO = A.NO
		WHERE E.NO = #{no}
	</select>
	
	<select id="selectAttachList" resultType="com.coding5.el.common.vo.AttachVo">
		SELECT
		    NO
		    ,EMAIL_NO
		    ,FILE_NAME
		    ,ENROLL_DATE
		    ,STATUS
		FROM EMAIL_ATTATCH
		WHERE EMAIL_NO = #{no}
	</select>
	<insert id="stopProcess">
		INSERT INTO REPORT
		(
			NO
			,BLACKLIST
			,START_DATE
			,FINISH_DATE
		)
		VALUES
		(	
			SEQ_REPORT_NO.NEXTVAL
			,#{blacklist}
			,#{startDate}
			,#{finishDate}
		)
	</insert>
	<select id="selectStudentMailList" resultType="com.coding5.el.email.vo.MailVo">
		SELECT
		    EMAIL AS TO_ADDRESS
		FROM MEMBER
		WHERE QUIT_YN = 'N'
	</select>
	<select id="selectTeacherMailList" resultType="com.coding5.el.email.vo.MailVo">
		SELECT
		    M.EMAIL AS TO_ADDRESS
		FROM TEACHER T
		JOIN MEMBER M ON T.MEMBER_NO = M.NO
		WHERE M.QUIT_YN = 'N'
		AND T.STATUS_YN = 'Y'
		AND T.DELETE_YN = 'N'
	</select>
	<select id="selectCorpMailList" resultType="com.coding5.el.email.vo.MailVo">
		SELECT
		    ID AS TO_ADDRESS
		FROM CORPORATE_MEMBER
		WHERE QUIT_YN = 'N'
		AND STATUS_YN = 'Y'
		AND DELETE_YN = 'N'
	</select>
	
	<insert id="insertMailList">
		INSERT ALL
		<foreach collection="list" item="vo" >
		INTO EMAIL
		(
            NO
            ,ADMIN_NO
            ,TO_ADDRESS
            ,FROM_ADDRESS
            ,TITLE
            ,CONTENT
            ,FILE_YN
		)
		VALUES 
		( 	
			GET_EMAIL_SEQ 
			, #{vo.adminNo} 
			, #{vo.toAddress}
			, #{vo.fromAddress}
			, #{vo.title}
			, #{vo.content}
			, #{vo.fileYn}
		)
		</foreach>
		select 1 from dual
	</insert>
	<select id="selectMailPk" resultType="com.coding5.el.common.vo.AttachVo">
		SELECT
		    NO AS EMAIL_NO
		FROM EMAIL
		WHERE TITLE = #{title}
		AND CONTENT = #{content}
		AND FILE_YN = #{fileYn}
		AND ADMIN_NO = #{adminNo}
	</select>
</mapper>
